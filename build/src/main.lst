GAS LISTING /tmp/ccC3PBp2.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_Z15userMainWrapperPv
   9              	_Z15userMainWrapperPv:
  10              	.LFB37:
  11              		.file 1 "src/main.cpp"
   1:src/main.cpp  **** #include "../h/pcb.hpp"
   2:src/main.cpp  **** #include "../h/riscv.hpp"
   3:src/main.cpp  **** #include "../test/printing.hpp"
   4:src/main.cpp  **** #include "../lib/console.h"
   5:src/main.cpp  **** 
   6:src/main.cpp  **** extern void userMain();
   7:src/main.cpp  **** 
   8:src/main.cpp  **** bool endUserMain = false;
   9:src/main.cpp  **** 
  10:src/main.cpp  **** void userMainWrapper(void *param) {
  12              		.loc 1 10 35
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FF 		addi	sp,sp,-16
  16              		.cfi_def_cfa_offset 16
  17 0004 23341100 		sd	ra,8(sp)
  18 0008 23308100 		sd	s0,0(sp)
  19              		.cfi_offset 1, -8
  20              		.cfi_offset 8, -16
  21 000c 13040101 		addi	s0,sp,16
  22              		.cfi_def_cfa 8, 0
  11:src/main.cpp  ****     userMain();
  23              		.loc 1 11 5
  24              		.loc 1 11 13 is_stmt 0
  25 0010 97000000 		call	_Z8userMainv@plt
  25      E7800000 
  26              	.LVL1:
  12:src/main.cpp  ****     endUserMain = true;
  27              		.loc 1 12 5 is_stmt 1
  28              		.loc 1 12 17 is_stmt 0
  29 0018 93071000 		li	a5,1
  30 001c 17070000 		sb	a5,.LANCHOR0,a4
  30      2300F700 
  13:src/main.cpp  **** }
  31              		.loc 1 13 1
  32 0024 83308100 		ld	ra,8(sp)
  33              		.cfi_restore 1
  34 0028 03340100 		ld	s0,0(sp)
  35              		.cfi_restore 8
  36              		.cfi_def_cfa 2, 16
  37 002c 13010101 		addi	sp,sp,16
  38              		.cfi_def_cfa_offset 0
  39 0030 67800000 		jr	ra
  40              		.cfi_endproc
  41              	.LFE37:
  43              		.section	.rodata.str1.8,"aMS",@progbits,1
  44              		.align	3
GAS LISTING /tmp/ccC3PBp2.s 			page 2


  45              	.LC0:
  46 0000 46696E69 		.string	"Finished all\n"
  46      73686564 
  46      20616C6C 
  46      0A00
  47              		.text
  48              		.align	2
  49              		.globl	main
  51              	main:
  52              	.LFB38:
  14:src/main.cpp  **** 
  15:src/main.cpp  **** void main() {
  53              		.loc 1 15 13 is_stmt 1
  54              		.cfi_startproc
  55 0034 130101FF 		addi	sp,sp,-16
  56              		.cfi_def_cfa_offset 16
  57 0038 23341100 		sd	ra,8(sp)
  58 003c 23308100 		sd	s0,0(sp)
  59              		.cfi_offset 1, -8
  60              		.cfi_offset 8, -16
  61 0040 13040101 		addi	s0,sp,16
  62              		.cfi_def_cfa 8, 0
  16:src/main.cpp  **** 
  17:src/main.cpp  ****     Riscv::w_stvec((uint64) &Riscv::supervisorTrap);
  63              		.loc 1 17 5
  64              		.loc 1 17 19 is_stmt 0
  65 0044 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
  65      83B70700 
  66              	.LVL2:
  67              	.LBB5:
  68              	.LBB6:
  69              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** #ifndef OS1_PROJEKAT_RISCV_HPP
   2:src/../h/riscv.hpp **** #define OS1_PROJEKAT_RISCV_HPP
   3:src/../h/riscv.hpp **** #include "../lib/hw.h"
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** class Riscv {
   6:src/../h/riscv.hpp **** public:
   7:src/../h/riscv.hpp ****     static void popSppSpie();
   8:src/../h/riscv.hpp **** 
   9:src/../h/riscv.hpp ****     static uint64 r_scause();
  10:src/../h/riscv.hpp **** 
  11:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  12:src/../h/riscv.hpp **** 
  13:src/../h/riscv.hpp ****     static uint64 r_sepc();
  14:src/../h/riscv.hpp **** 
  15:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  16:src/../h/riscv.hpp **** 
  17:src/../h/riscv.hpp ****     static uint64 r_stvec();
  18:src/../h/riscv.hpp **** 
  19:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  20:src/../h/riscv.hpp **** 
  21:src/../h/riscv.hpp ****     static uint64 r_stval();
  22:src/../h/riscv.hpp **** 
  23:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  24:src/../h/riscv.hpp **** 
  25:src/../h/riscv.hpp ****     enum BitMaskSip {
GAS LISTING /tmp/ccC3PBp2.s 			page 3


  26:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),        //supervisor software interrupt enable(pending) bit
  27:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),        //supervisor trap interrupt enable(pending) bit
  28:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),        //supervisor external interrupt enable(pending) bit
  29:src/../h/riscv.hpp ****     };
  30:src/../h/riscv.hpp **** 
  31:src/../h/riscv.hpp ****     //mask set register sip
  32:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  33:src/../h/riscv.hpp **** 
  34:src/../h/riscv.hpp ****     //mask clear register sip
  35:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  36:src/../h/riscv.hpp **** 
  37:src/../h/riscv.hpp ****     static uint64 r_sip();
  38:src/../h/riscv.hpp **** 
  39:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  40:src/../h/riscv.hpp **** 
  41:src/../h/riscv.hpp ****     enum BitMaskSstatus {
  42:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),       //mask external interrupt
  43:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),      //previous value of sie
  44:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),       //value of previous mode (user or kernel)
  45:src/../h/riscv.hpp ****     };
  46:src/../h/riscv.hpp **** 
  47:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  48:src/../h/riscv.hpp **** 
  49:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  50:src/../h/riscv.hpp **** 
  51:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  52:src/../h/riscv.hpp **** 
  53:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  54:src/../h/riscv.hpp **** 
  55:src/../h/riscv.hpp ****     static void supervisorTrap();       //definition of this function is in supervisorTrap.S
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp **** 
  58:src/../h/riscv.hpp **** 
  59:src/../h/riscv.hpp **** private:
  60:src/../h/riscv.hpp **** 
  61:src/../h/riscv.hpp ****     //supervisor trap handler
  62:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
  63:src/../h/riscv.hpp **** 
  64:src/../h/riscv.hpp ****     using size_t= decltype(sizeof(0));
  65:src/../h/riscv.hpp **** 
  66:src/../h/riscv.hpp ****     void *operator new(size_t n);
  67:src/../h/riscv.hpp **** 
  68:src/../h/riscv.hpp ****     void *operator new[](size_t n);
  69:src/../h/riscv.hpp **** 
  70:src/../h/riscv.hpp ****     void operator delete(void *p) noexcept;
  71:src/../h/riscv.hpp **** 
  72:src/../h/riscv.hpp ****     void operator delete[](void *p) noexcept;
  73:src/../h/riscv.hpp **** 
  74:src/../h/riscv.hpp **** };
  75:src/../h/riscv.hpp **** 
  76:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause() {
  77:src/../h/riscv.hpp ****     uint64 volatile scause;
  78:src/../h/riscv.hpp ****     __asm__ volatile("csrr %[scause], scause":[scause] "=r"(scause));
  79:src/../h/riscv.hpp ****     return scause;
  80:src/../h/riscv.hpp **** }
  81:src/../h/riscv.hpp **** 
  82:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
GAS LISTING /tmp/ccC3PBp2.s 			page 4


  83:src/../h/riscv.hpp ****     __asm__ volatile("csrw scause, %[scause]": :[scause] "r"(scause));
  84:src/../h/riscv.hpp **** }
  85:src/../h/riscv.hpp **** 
  86:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc() {
  87:src/../h/riscv.hpp ****     uint64 volatile sepc;
  88:src/../h/riscv.hpp ****     __asm__ volatile("csrr %[sepc], sepc":[sepc] "=r"(sepc));
  89:src/../h/riscv.hpp ****     return sepc;
  90:src/../h/riscv.hpp **** }
  91:src/../h/riscv.hpp **** 
  92:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
  93:src/../h/riscv.hpp ****     __asm__ volatile("csrw sepc, %[sepc]": : [sepc] "r"(sepc));
  94:src/../h/riscv.hpp **** }
  95:src/../h/riscv.hpp **** 
  96:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec() {
  97:src/../h/riscv.hpp ****     uint64 volatile stvec;
  98:src/../h/riscv.hpp ****     __asm__ volatile("csrr %[stvec], stvec":[stvec] "=r"(stvec));
  99:src/../h/riscv.hpp ****     return stvec;
 100:src/../h/riscv.hpp **** }
 101:src/../h/riscv.hpp **** 
 102:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 103:src/../h/riscv.hpp ****     __asm__ volatile("csrw stvec, %[stvec]": :[stvec] "r"(stvec));
  70              		.loc 2 103 5 is_stmt 1
  71              		.loc 2 103 66 is_stmt 0
  72              	#APP
  73              	# 103 "src/../h/riscv.hpp" 1
 104              	}
  74              		csrw stvec, a5
  75              	# 0 "" 2
  76              	.LVL3:
  77              	#NO_APP
  78              	.LBE6:
  79              	.LBE5:
  18:src/main.cpp  **** 
  19:src/main.cpp  **** 
  20:src/main.cpp  ****     PCB *thread = PCB::createThread(nullptr, nullptr, nullptr);
  80              		.loc 1 20 5 is_stmt 1
  81              		.loc 1 20 36 is_stmt 0
  82 0050 13060000 		li	a2,0
  83 0054 93050000 		li	a1,0
  84 0058 13050000 		li	a0,0
  85 005c 97000000 		call	_ZN3PCB12createThreadEPFvPvES0_Pm@plt
  85      E7800000 
  86              	.LVL4:
  21:src/main.cpp  ****     PCB::running = thread;
  87              		.loc 1 21 5 is_stmt 1
  88              		.loc 1 21 18 is_stmt 0
  89 0064 97070000 		la	a5,_ZN3PCB7runningE
  89      83B70700 
  90 006c 23B0A700 		sd	a0,0(a5)
  22:src/main.cpp  **** 
  23:src/main.cpp  ****     uint64 *stack = (uint64 *) __mem_alloc(DEFAULT_STACK_SIZE);
  91              		.loc 1 23 5 is_stmt 1
  92              		.loc 1 23 43 is_stmt 0
  93 0070 37150000 		li	a0,4096
  94              	.LVL5:
  95 0074 97000000 		call	__mem_alloc@plt
  95      E7800000 
GAS LISTING /tmp/ccC3PBp2.s 			page 5


  96              	.LVL6:
  97 007c 13060500 		mv	a2,a0
  98              	.LVL7:
  24:src/main.cpp  ****     PCB::createThread(&userMainWrapper, nullptr, stack);
  99              		.loc 1 24 5 is_stmt 1
 100              		.loc 1 24 22 is_stmt 0
 101 0080 93050000 		li	a1,0
 102 0084 17050000 		lla	a0,_Z15userMainWrapperPv
 102      13050500 
 103              	.LVL8:
 104 008c 97000000 		call	_ZN3PCB12createThreadEPFvPvES0_Pm@plt
 104      E7800000 
 105              	.LVL9:
 106              	.L5:
  25:src/main.cpp  **** 
  26:src/main.cpp  ****     while (!endUserMain) {
 107              		.loc 1 26 5 is_stmt 1
 108              		.loc 1 26 12
 109 0094 97070000 		lbu	a5,.LANCHOR0
 109      83C70700 
 110 009c 639A0700 		bnez	a5,.L4
 111              	.LBB7:
  27:src/main.cpp  ****         uint64 number = 0x13;
 112              		.loc 1 27 9
 113              	.LVL10:
  28:src/main.cpp  ****         __asm__ volatile ("mv a0, %[number]" : : [number] "r"(number));
 114              		.loc 1 28 9
 115              		.loc 1 28 71 is_stmt 0
 116 00a0 93073001 		li	a5,19
 117              	#APP
 118              	# 28 "src/main.cpp" 1
  29              	
  30:src/main.cpp  ****         __asm__ volatile("ecall");
 119              		mv a0, a5
 120              	# 0 "" 2
 121              		.loc 1 30 9 is_stmt 1
 122              		.loc 1 30 34 is_stmt 0
 123              	# 30 "src/main.cpp" 1
  31              	    }
 124              		ecall
 125              	# 0 "" 2
 126              	#NO_APP
 127              	.LBE7:
  26:src/main.cpp  ****         uint64 number = 0x13;
 128              		.loc 1 26 5
 129 00ac 6FF09FFE 		j	.L5
 130              	.LVL11:
 131              	.L4:
  32:src/main.cpp  **** //    userMain();
  33:src/main.cpp  **** 
  34:src/main.cpp  **** 
  35:src/main.cpp  **** 
  36:src/main.cpp  ****     printString("Finished all\n");
 132              		.loc 1 36 5 is_stmt 1
 133              		.loc 1 36 16 is_stmt 0
 134 00b0 17050000 		lla	a0,.LC0
 134      13050500 
GAS LISTING /tmp/ccC3PBp2.s 			page 6


 135 00b8 97000000 		call	_Z11printStringPKc@plt
 135      E7800000 
 136              	.LVL12:
  37:src/main.cpp  **** 
  38:src/main.cpp  **** }
 137              		.loc 1 38 1
 138 00c0 83308100 		ld	ra,8(sp)
 139              		.cfi_restore 1
 140 00c4 03340100 		ld	s0,0(sp)
 141              		.cfi_restore 8
 142              		.cfi_def_cfa 2, 16
 143 00c8 13010101 		addi	sp,sp,16
 144              		.cfi_def_cfa_offset 0
 145 00cc 67800000 		jr	ra
 146              		.cfi_endproc
 147              	.LFE38:
 149              		.globl	endUserMain
 150              		.bss
 151              		.set	.LANCHOR0,. + 0
 154              	endUserMain:
 155 0000 00       		.zero	1
 156              		.text
 157              	.Letext0:
 158              		.file 3 "src/../h/../lib/hw.h"
 159              		.file 4 "src/../h/pcb.hpp"
 160              		.file 5 "src/../h/../lib/mem.h"
 161              		.file 6 "src/../test/printing.hpp"
GAS LISTING /tmp/ccC3PBp2.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccC3PBp2.s:9      .text:0000000000000000 _Z15userMainWrapperPv
     /tmp/ccC3PBp2.s:13     .text:0000000000000000 .L0 
     /tmp/ccC3PBp2.s:15     .text:0000000000000000 .L0 
     /tmp/ccC3PBp2.s:16     .text:0000000000000004 .L0 
     /tmp/ccC3PBp2.s:19     .text:000000000000000c .L0 
     /tmp/ccC3PBp2.s:20     .text:000000000000000c .L0 
     /tmp/ccC3PBp2.s:22     .text:0000000000000010 .L0 
     /tmp/ccC3PBp2.s:24     .text:0000000000000010 .L0 
     /tmp/ccC3PBp2.s:25     .text:0000000000000010 .L0 
     /tmp/ccC3PBp2.s:28     .text:0000000000000018 .L0 
     /tmp/ccC3PBp2.s:29     .text:0000000000000018 .L0 
     /tmp/ccC3PBp2.s:32     .text:0000000000000024 .L0 
     /tmp/ccC3PBp2.s:33     .text:0000000000000028 .L0 
     /tmp/ccC3PBp2.s:35     .text:000000000000002c .L0 
     /tmp/ccC3PBp2.s:36     .text:000000000000002c .L0 
     /tmp/ccC3PBp2.s:38     .text:0000000000000030 .L0 
     /tmp/ccC3PBp2.s:40     .text:0000000000000034 .L0 
     /tmp/ccC3PBp2.s:51     .text:0000000000000034 main
     /tmp/ccC3PBp2.s:54     .text:0000000000000034 .L0 
     /tmp/ccC3PBp2.s:55     .text:0000000000000034 .L0 
     /tmp/ccC3PBp2.s:56     .text:0000000000000038 .L0 
     /tmp/ccC3PBp2.s:59     .text:0000000000000040 .L0 
     /tmp/ccC3PBp2.s:60     .text:0000000000000040 .L0 
     /tmp/ccC3PBp2.s:62     .text:0000000000000044 .L0 
     /tmp/ccC3PBp2.s:64     .text:0000000000000044 .L0 
     /tmp/ccC3PBp2.s:65     .text:0000000000000044 .L0 
     /tmp/ccC3PBp2.s:71     .text:000000000000004c .L0 
  src/../h/riscv.hpp:103    .text:000000000000004c .L0 
     /tmp/ccC3PBp2.s:81     .text:0000000000000050 .L0 
     /tmp/ccC3PBp2.s:82     .text:0000000000000050 .L0 
     /tmp/ccC3PBp2.s:88     .text:0000000000000064 .L0 
     /tmp/ccC3PBp2.s:89     .text:0000000000000064 .L0 
     /tmp/ccC3PBp2.s:92     .text:0000000000000070 .L0 
     /tmp/ccC3PBp2.s:93     .text:0000000000000070 .L0 
     /tmp/ccC3PBp2.s:100    .text:0000000000000080 .L0 
     /tmp/ccC3PBp2.s:101    .text:0000000000000080 .L0 
     /tmp/ccC3PBp2.s:108    .text:0000000000000094 .L0 
     /tmp/ccC3PBp2.s:109    .text:0000000000000094 .L0 
     /tmp/ccC3PBp2.s:114    .text:00000000000000a0 .L0 
     /tmp/ccC3PBp2.s:115    .text:00000000000000a0 .L0 
     /tmp/ccC3PBp2.s:116    .text:00000000000000a0 .L0 
     /tmp/ccC3PBp2.s:122    .text:00000000000000a8 .L0 
        src/main.cpp:30     .text:00000000000000a8 .L0 
     /tmp/ccC3PBp2.s:129    .text:00000000000000ac .L0 
     /tmp/ccC3PBp2.s:133    .text:00000000000000b0 .L0 
     /tmp/ccC3PBp2.s:134    .text:00000000000000b0 .L0 
     /tmp/ccC3PBp2.s:138    .text:00000000000000c0 .L0 
     /tmp/ccC3PBp2.s:139    .text:00000000000000c4 .L0 
     /tmp/ccC3PBp2.s:141    .text:00000000000000c8 .L0 
     /tmp/ccC3PBp2.s:142    .text:00000000000000c8 .L0 
     /tmp/ccC3PBp2.s:144    .text:00000000000000cc .L0 
     /tmp/ccC3PBp2.s:146    .text:00000000000000d0 .L0 
     /tmp/ccC3PBp2.s:154    .bss:0000000000000000 endUserMain
     /tmp/ccC3PBp2.s:151    .bss:0000000000000000 .LANCHOR0
     /tmp/ccC3PBp2.s:162    .text:00000000000000d0 .L0 
GAS LISTING /tmp/ccC3PBp2.s 			page 8


     /tmp/ccC3PBp2.s:30     .text:000000000000001c .L0 
     /tmp/ccC3PBp2.s:65     .text:0000000000000044 .L0 
     /tmp/ccC3PBp2.s:89     .text:0000000000000064 .L0 
     /tmp/ccC3PBp2.s:102    .text:0000000000000084 .L0 
     /tmp/ccC3PBp2.s:109    .text:0000000000000094 .L0 
     /tmp/ccC3PBp2.s:45     .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccC3PBp2.s:134    .text:00000000000000b0 .L0 
     /tmp/ccC3PBp2.s:131    .text:00000000000000b0 .L4
     /tmp/ccC3PBp2.s:106    .text:0000000000000094 .L5
     /tmp/ccC3PBp2.s:1049   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccC3PBp2.s:2098   .debug_str:00000000000005fd .LASF113
     /tmp/ccC3PBp2.s:1994   .debug_str:0000000000000307 .LASF114
     /tmp/ccC3PBp2.s:2030   .debug_str:00000000000003ec .LASF115
     /tmp/ccC3PBp2.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccC3PBp2.s:157    .text:00000000000000d0 .Letext0
     /tmp/ccC3PBp2.s:1886   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccC3PBp2.s:2020   .debug_str:00000000000003c1 .LASF0
     /tmp/ccC3PBp2.s:2042   .debug_str:0000000000000448 .LASF1
     /tmp/ccC3PBp2.s:2004   .debug_str:0000000000000369 .LASF2
     /tmp/ccC3PBp2.s:1976   .debug_str:00000000000002a5 .LASF4
     /tmp/ccC3PBp2.s:2078   .debug_str:000000000000055e .LASF3
     /tmp/ccC3PBp2.s:1912   .debug_str:0000000000000088 .LASF5
     /tmp/ccC3PBp2.s:2046   .debug_str:0000000000000462 .LASF6
     /tmp/ccC3PBp2.s:2018   .debug_str:00000000000003ae .LASF7
     /tmp/ccC3PBp2.s:2104   .debug_str:00000000000006df .LASF8
     /tmp/ccC3PBp2.s:1964   .debug_str:000000000000022e .LASF9
     /tmp/ccC3PBp2.s:2062   .debug_str:00000000000004e3 .LASF10
     /tmp/ccC3PBp2.s:2100   .debug_str:00000000000006c1 .LASF11
     /tmp/ccC3PBp2.s:1914   .debug_str:000000000000008f .LASF12
     /tmp/ccC3PBp2.s:1894   .debug_str:000000000000001f .LASF13
     /tmp/ccC3PBp2.s:1924   .debug_str:00000000000000f9 .LASF14
     /tmp/ccC3PBp2.s:2074   .debug_str:0000000000000530 .LASF15
     /tmp/ccC3PBp2.s:1928   .debug_str:0000000000000111 .LASF16
     /tmp/ccC3PBp2.s:1900   .debug_str:0000000000000042 .LASF116
     /tmp/ccC3PBp2.s:2070   .debug_str:0000000000000520 .LASF25
     /tmp/ccC3PBp2.s:1916   .debug_str:000000000000009f .LASF27
     /tmp/ccC3PBp2.s:2048   .debug_str:0000000000000475 .LASF17
     /tmp/ccC3PBp2.s:2056   .debug_str:00000000000004ae .LASF19
     /tmp/ccC3PBp2.s:1898   .debug_str:0000000000000038 .LASF18
     /tmp/ccC3PBp2.s:1988   .debug_str:00000000000002d8 .LASF20
     /tmp/ccC3PBp2.s:2084   .debug_str:0000000000000588 .LASF21
     /tmp/ccC3PBp2.s:2002   .debug_str:0000000000000347 .LASF22
     /tmp/ccC3PBp2.s:1986   .debug_str:00000000000002d1 .LASF23
     /tmp/ccC3PBp2.s:1902   .debug_str:000000000000004a .LASF24
     /tmp/ccC3PBp2.s:2006   .debug_str:0000000000000377 .LASF26
     /tmp/ccC3PBp2.s:1904   .debug_str:000000000000005c .LASF28
     /tmp/ccC3PBp2.s:1980   .debug_str:00000000000002b8 .LASF29
     /tmp/ccC3PBp2.s:2064   .debug_str:00000000000004f2 .LASF30
     /tmp/ccC3PBp2.s:2118   .debug_str:000000000000074b .LASF31
     /tmp/ccC3PBp2.s:2130   .debug_str:00000000000007ae .LASF32
     /tmp/ccC3PBp2.s:1998   .debug_str:000000000000032c .LASF33
     /tmp/ccC3PBp2.s:1958   .debug_str:00000000000001f3 .LASF34
     /tmp/ccC3PBp2.s:1992   .debug_str:00000000000002fa .LASF35
     /tmp/ccC3PBp2.s:2132   .debug_str:00000000000007d0 .LASF36
     /tmp/ccC3PBp2.s:2068   .debug_str:000000000000051b .LASF117
     /tmp/ccC3PBp2.s:1946   .debug_str:00000000000001a2 .LASF118
     /tmp/ccC3PBp2.s:2088   .debug_str:00000000000005ae .LASF119
GAS LISTING /tmp/ccC3PBp2.s 			page 9


     /tmp/ccC3PBp2.s:1984   .debug_str:00000000000002cc .LASF37
     /tmp/ccC3PBp2.s:2026   .debug_str:00000000000003de .LASF38
     /tmp/ccC3PBp2.s:2028   .debug_str:00000000000003e4 .LASF39
     /tmp/ccC3PBp2.s:2032   .debug_str:000000000000040c .LASF40
     /tmp/ccC3PBp2.s:1982   .debug_str:00000000000002c3 .LASF41
     /tmp/ccC3PBp2.s:1888   .debug_str:0000000000000000 .LASF42
     /tmp/ccC3PBp2.s:2008   .debug_str:0000000000000383 .LASF43
     /tmp/ccC3PBp2.s:2000   .debug_str:0000000000000339 .LASF44
     /tmp/ccC3PBp2.s:2060   .debug_str:00000000000004ca .LASF46
     /tmp/ccC3PBp2.s:2112   .debug_str:000000000000071c .LASF52
     /tmp/ccC3PBp2.s:1920   .debug_str:00000000000000c7 .LASF54
     /tmp/ccC3PBp2.s:2024   .debug_str:00000000000003d5 .LASF45
     /tmp/ccC3PBp2.s:1972   .debug_str:000000000000027c .LASF47
     /tmp/ccC3PBp2.s:2080   .debug_str:0000000000000570 .LASF120
     /tmp/ccC3PBp2.s:2116   .debug_str:000000000000073e .LASF48
     /tmp/ccC3PBp2.s:1978   .debug_str:00000000000002ac .LASF50
     /tmp/ccC3PBp2.s:1960   .debug_str:000000000000020c .LASF49
     /tmp/ccC3PBp2.s:1926   .debug_str:0000000000000105 .LASF51
     /tmp/ccC3PBp2.s:2086   .debug_str:000000000000059e .LASF53
     /tmp/ccC3PBp2.s:2090   .debug_str:00000000000005c4 .LASF55
     /tmp/ccC3PBp2.s:2036   .debug_str:0000000000000424 .LASF99
     /tmp/ccC3PBp2.s:2120   .debug_str:0000000000000762 .LASF100
     /tmp/ccC3PBp2.s:1952   .debug_str:00000000000001d3 .LASF56
     /tmp/ccC3PBp2.s:2038   .debug_str:0000000000000437 .LASF57
     /tmp/ccC3PBp2.s:2072   .debug_str:0000000000000525 .LASF90
     /tmp/ccC3PBp2.s:2122   .debug_str:000000000000076f .LASF92
     /tmp/ccC3PBp2.s:1896   .debug_str:000000000000002f .LASF60
     /tmp/ccC3PBp2.s:1948   .debug_str:00000000000001aa .LASF62
     /tmp/ccC3PBp2.s:1942   .debug_str:0000000000000190 .LASF58
     /tmp/ccC3PBp2.s:1940   .debug_str:000000000000017b .LASF59
     /tmp/ccC3PBp2.s:2082   .debug_str:0000000000000581 .LASF61
     /tmp/ccC3PBp2.s:2066   .debug_str:0000000000000508 .LASF63
     /tmp/ccC3PBp2.s:2096   .debug_str:00000000000005f6 .LASF64
     /tmp/ccC3PBp2.s:2092   .debug_str:00000000000005d1 .LASF65
     /tmp/ccC3PBp2.s:1956   .debug_str:00000000000001eb .LASF66
     /tmp/ccC3PBp2.s:1930   .debug_str:0000000000000127 .LASF67
     /tmp/ccC3PBp2.s:1892   .debug_str:0000000000000017 .LASF68
     /tmp/ccC3PBp2.s:1970   .debug_str:0000000000000268 .LASF69
     /tmp/ccC3PBp2.s:1910   .debug_str:0000000000000080 .LASF70
     /tmp/ccC3PBp2.s:2114   .debug_str:000000000000072a .LASF71
     /tmp/ccC3PBp2.s:2128   .debug_str:00000000000007a6 .LASF72
     /tmp/ccC3PBp2.s:1950   .debug_str:00000000000001bf .LASF73
     /tmp/ccC3PBp2.s:2022   .debug_str:00000000000003ce .LASF74
     /tmp/ccC3PBp2.s:2126   .debug_str:0000000000000793 .LASF75
     /tmp/ccC3PBp2.s:1908   .debug_str:0000000000000079 .LASF76
     /tmp/ccC3PBp2.s:1954   .debug_str:00000000000001d8 .LASF77
     /tmp/ccC3PBp2.s:2014   .debug_str:000000000000039d .LASF78
     /tmp/ccC3PBp2.s:2094   .debug_str:00000000000005e4 .LASF79
     /tmp/ccC3PBp2.s:1906   .debug_str:0000000000000073 .LASF80
     /tmp/ccC3PBp2.s:1962   .debug_str:000000000000021c .LASF81
     /tmp/ccC3PBp2.s:2016   .debug_str:00000000000003a3 .LASF82
     /tmp/ccC3PBp2.s:2076   .debug_str:0000000000000546 .LASF83
     /tmp/ccC3PBp2.s:2040   .debug_str:000000000000043d .LASF84
     /tmp/ccC3PBp2.s:1996   .debug_str:0000000000000314 .LASF85
     /tmp/ccC3PBp2.s:1922   .debug_str:00000000000000ef .LASF86
     /tmp/ccC3PBp2.s:1974   .debug_str:000000000000028f .LASF87
     /tmp/ccC3PBp2.s:2010   .debug_str:000000000000038c .LASF88
GAS LISTING /tmp/ccC3PBp2.s 			page 10


     /tmp/ccC3PBp2.s:1968   .debug_str:0000000000000252 .LASF89
     /tmp/ccC3PBp2.s:1932   .debug_str:000000000000013b .LASF91
     /tmp/ccC3PBp2.s:1918   .debug_str:00000000000000ab .LASF93
     /tmp/ccC3PBp2.s:2108   .debug_str:00000000000006fb .LASF94
     /tmp/ccC3PBp2.s:2052   .debug_str:0000000000000486 .LASF95
     /tmp/ccC3PBp2.s:1938   .debug_str:000000000000016d .LASF96
     /tmp/ccC3PBp2.s:2034   .debug_str:0000000000000416 .LASF97
     /tmp/ccC3PBp2.s:2102   .debug_str:00000000000006d0 .LASF98
     /tmp/ccC3PBp2.s:1890   .debug_str:0000000000000008 .LASF101
     /tmp/ccC3PBp2.s:2110   .debug_str:0000000000000710 .LASF102
     /tmp/ccC3PBp2.s:2058   .debug_str:00000000000004c5 .LASF103
     /tmp/ccC3PBp2.s:52     .text:0000000000000034 .LFB38
     /tmp/ccC3PBp2.s:147    .text:00000000000000d0 .LFE38
     /tmp/ccC3PBp2.s:2012   .debug_str:0000000000000396 .LASF104
     /tmp/ccC3PBp2.s:1833   .debug_loc:0000000000000000 .LLST1
     /tmp/ccC3PBp2.s:1840   .debug_loc:0000000000000023 .LLST2
     /tmp/ccC3PBp2.s:111    .text:00000000000000a0 .LBB7
     /tmp/ccC3PBp2.s:127    .text:00000000000000ac .LBE7
     /tmp/ccC3PBp2.s:2044   .debug_str:000000000000045b .LASF105
     /tmp/ccC3PBp2.s:1851   .debug_loc:0000000000000059 .LLST3
     /tmp/ccC3PBp2.s:67     .text:000000000000004c .LBB5
     /tmp/ccC3PBp2.s:79     .text:0000000000000050 .LBE5
     /tmp/ccC3PBp2.s:86     .text:0000000000000064 .LVL4
     /tmp/ccC3PBp2.s:96     .text:000000000000007c .LVL6
     /tmp/ccC3PBp2.s:105    .text:0000000000000094 .LVL9
     /tmp/ccC3PBp2.s:136    .text:00000000000000c0 .LVL12
     /tmp/ccC3PBp2.s:1936   .debug_str:000000000000015d .LASF106
     /tmp/ccC3PBp2.s:1966   .debug_str:000000000000023c .LASF107
     /tmp/ccC3PBp2.s:10     .text:0000000000000000 .LFB37
     /tmp/ccC3PBp2.s:41     .text:0000000000000034 .LFE37
     /tmp/ccC3PBp2.s:2050   .debug_str:0000000000000480 .LASF121
     /tmp/ccC3PBp2.s:1859   .debug_loc:000000000000007d .LLST0
     /tmp/ccC3PBp2.s:26     .text:0000000000000018 .LVL1
     /tmp/ccC3PBp2.s:2054   .debug_str:00000000000004a8 .LASF122
     /tmp/ccC3PBp2.s:2106   .debug_str:00000000000006ef .LASF108
     /tmp/ccC3PBp2.s:1934   .debug_str:000000000000014a .LASF109
     /tmp/ccC3PBp2.s:2124   .debug_str:0000000000000787 .LASF110
     /tmp/ccC3PBp2.s:1990   .debug_str:00000000000002ed .LASF111
     /tmp/ccC3PBp2.s:1944   .debug_str:0000000000000199 .LASF112
     /tmp/ccC3PBp2.s:94     .text:0000000000000074 .LVL5
     /tmp/ccC3PBp2.s:98     .text:0000000000000080 .LVL7
     /tmp/ccC3PBp2.s:103    .text:000000000000008c .LVL8
     /tmp/ccC3PBp2.s:113    .text:00000000000000a0 .LVL10
     /tmp/ccC3PBp2.s:130    .text:00000000000000b0 .LVL11
     /tmp/ccC3PBp2.s:14     .text:0000000000000000 .LVL0
     /tmp/ccC3PBp2.s:163    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_Z8userMainv
_ZN5Riscv14supervisorTrapEv
_ZN3PCB12createThreadEPFvPvES0_Pm
_ZN3PCB7runningE
__mem_alloc
_Z11printStringPKc
